name: FinPulse CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Install system dependencies for ta-lib
      - name: Install ta-lib
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib
          ./configure --prefix=/usr
          make
          sudo make install
          cd ..

      # Set up Python 3.13
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version

      # Cache Poetry dependencies
      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # Install project dependencies
      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      #Create data directories
      - name: Create data
        run: |
          mkdir -p data/raw data/processed
        
      # Run the main script
      - name: Run FinPulse
        run: |
          poetry run python -m finpulse.main

      # Run linting with flake8
      - name: Run linting
        run: |
          poetry run pip install flake8 || echo "flake8 installation failed, skipping..."
          poetry run flake8 src --max-line-length=120 || echo "Linting skipped or failed"

      # Run tests with pytest
      - name: Run tests
        run: |
          poetry run pip install pytest 
          poetry run pytest tests --verbose